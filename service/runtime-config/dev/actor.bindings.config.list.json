[
  {
    "scenario": "component.factory.types",
    "baseType": "io.aftersound.weave.component.ComponentFactory",
    "extensionTypes": [
      "io.aftersound.weave.cassandra3x.CassandraClusterFactory",
      "io.aftersound.weave.cassandra3x.CassandraSessionFactory",
      "io.aftersound.weave.component.ActorRegistryFactory",
      "io.aftersound.weave.couchbase2x.CouchbaseClusterFactory",
      "io.aftersound.weave.couchbase2x.CouchbaseBucketFactory",
      "io.aftersound.weave.cr.ClassResourceFactory",
      "io.aftersound.weave.fs.FileSystemFactory",
      "io.aftersound.weave.zk.ZKManagerFactory"
    ]
  },
  {
    "scenario": "cache.factory.types",
    "baseType": "io.aftersound.weave.service.cache.CacheFactory",
    "extensionTypes": [
    ]
  },
  {
    "scenario": "cache.key.generator.types",
    "baseType": "io.aftersound.weave.service.cache.KeyGenerator",
    "extensionTypes": [
    ]
  },
  {
    "scenario": "param.validator.types",
    "baseType": "io.aftersound.weave.service.request.Validator",
    "extensionTypes": [
      "io.aftersound.weave.service.request.AllowedValuesValidator"
    ]
  },
  {
    "scenario": "auth.handler.types",
    "baseType": "io.aftersound.weave.service.security.AuthHandler",
    "extensionTypes": [
      "io.aftersound.weave.service.security.demo.DemoAuthHandler"
    ]
  },
  {
    "scenario": "admin.service.executor.types",
    "baseType": "io.aftersound.weave.service.ServiceExecutor",
    "extensionTypes": [
      "io.aftersound.weave.service.discovery.OpenAPISpecServiceExecutor",
      "io.aftersound.weave.service.discovery.ServiceMetadataServiceExecutor",
      "io.aftersound.weave.service.management.fs.NamespaceManagementServiceExecutor",
      "io.aftersound.weave.service.management.fs.RuntimeConfigManagementServiceExecutor",
      "io.aftersound.weave.service.management.library.LibraryManagementServiceExecutor"
    ]
  },
  {
    "scenario": "service.executor.types",
    "baseType": "io.aftersound.weave.service.ServiceExecutor",
    "extensionTypes": [
      "io.aftersound.weave.sample.extension.service.GreetingServiceExecutor",
      "io.aftersound.weave.service.process.ProcessServiceExecutor",
      "io.aftersound.weave.service.process.ProcessHubServiceExecutor"
    ]
  }
]
