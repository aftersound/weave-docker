[
  {
    "path": "/greeting",
    "paramFields": [
      {
        "name": "p1",
        "type": "String",
        "multiValued": false,
        "paramType": "Path",
        "constraint": {
          "type": "Required"
        }
      },
      {
        "name": "name",
        "type": "String",
        "multiValued": false,
        "paramType": "Query",
        "constraint": {
          "type": "Required"
        }
      }
    ],
    "executionControl": {
      "type": "GreetingService",
      "greetingWords": [
        "您好",
        "Hello",
        "¡Hola",
        "Aloha",
        "Bonjour",
        "Hallo",
        "Ciao",
        "こんにちは",
        "안영하세요"
      ]
    },
    "authControl": {
      "type": "DemoAuth",
      "userCredentials": {
        "user": "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
      }
    }
  },
  {
    "path": "/1.php",
    "paramFields": [
      {
        "name": "p1",
        "type": "String",
        "multiValued": false,
        "paramType": "Path",
        "constraint": {
          "type": "Required"
        }
      },
      {
        "name": "data",
        "type": "String",
        "multiValued": false,
        "paramType": "Query",
        "constraint": {
          "type": "Required"
        }
      },
      {
        "name": "name",
        "type": "String",
        "multiValued": false,
        "paramType": "Derived",
        "constraint": {
          "type": "Required"
        },
        "deriveControl": {
          "from": "data",
          "type": "Alias"
        }
      }
    ],
    "executionControl": {
      "type": "GreetingService",
      "greetingWords": [
        "RECEIVED"
      ]
    }
  },
  {
    "path": "/beer-sample/query",
    "paramFields": [
      {
        "name": "p1",
        "type": "String",
        "paramType": "Path",
        "multiValued": false,
        "constraint": {
          "type": "Required"
        }
      },
      {
        "name": "p2",
        "type": "String",
        "paramType": "Path",
        "multiValued": false,
        "constraint": {
          "type": "Required"
        }
      },
      {
        "name": "type",
        "type": "String",
        "paramType": "Query",
        "multiValued": false,
        "constraint": {
          "type": "Required"
        },
        "validation": {
          "type": "AllowedValues",
          "valueSet": [
            "brewery",
            "beer"
          ],
          "enforcement": "Strong"
        }
      },
      {
        "name": "country",
        "type": "String",
        "valueFuncSpec": "MAPPING(String,String,US,United States,UK,United Kingdom,AU,Australia,CA,Canada)",
        "paramType": "Query",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        },
        "validation": {
          "type": "AllowedValues",
          "valueSet": [
            "US",
            "UK",
            "AU",
            "CA"
          ],
          "enforcement": "Strong"
        }
      },
      {
        "name": "state",
        "type": "String",
        "paramType": "Query",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "name": "zipcode",
        "type": "String",
        "paramType": "Query",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "name": "name",
        "type": "String",
        "paramType": "Query",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "name": "category",
        "type": "String",
        "paramType": "Query",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "name": "fetch_count",
        "type": "Integer",
        "valueFuncSpec": "TO_INTEGER(String,DefaultForNull(100))",
        "paramType": "Query",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "name": "skip_count",
        "type": "Integer",
        "valueFuncSpec": "TO_INTEGER(String,DefaultForNull(0))",
        "paramType": "Query",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      }
    ],
    "executionControl": {
      "type": "Couchbase2xService",
      "repository": {
        "clientId": "test.beer-sample",
        "accessControl": {
          "n1ql.timeout": "500"
        }
      },
      "byN1QL": {
        "n1qlTemplate": {
          "optionalVariables": ["country", "state", "zipcode", "name", "category"],
          "template": "select `beer-sample`.* from `beer-sample` WHERE @{TYPE}@{COUNTRY}@{STATE}@{ZIPCODE}@{NAME}@{CATEGORY} LIMIT @{fetch_count} OFFSET @{skip_count}",
          "elements": {
            "selector": "@if{type=='brewery'}BREWERY@else{}BEER@end{}",
            "choices": {
              "BREWERY": {
                "TYPE": "`type`='brewery'",
                "COUNTRY": "@if{country != null && country != ''} AND `country` like '%@{country}%'@end{}",
                "STATE": "@if{state != null && state != ''} AND `state` like '%@{state}%'@end{}",
                "ZIPCODE": "@if{zipcode != null && zipcode != ''} AND `code` like '%@{zipcode}%'@end{}",
                "CATEGORY": "",
                "NAME": "@if{name != null && name != ''} AND `name` like '%@{name}%'@end{}"
              },
              "BEER": {
                "TYPE": "`type`='beer'",
                "COUNTRY": "",
                "STATE": "",
                "ZIPCODE": "",
                "CATEGORY": "@if{category != null && category != ''} AND `category` like '%@{category}%'@end{}",
                "NAME": "@if{name != null && name != ''} AND `name` like '%@{name}%'@end{}"
              }
            }
          }
        },
        "schema": {
          "selector": "@if{type=='brewery'}BREWERY@else{}BEER@end{}",
          "choices": {
            "BREWERY": "JacksonCodec(io.aftersound.weave.schema.samples.Brewery,JSON)",
            "BEER": "JacksonCodec(io.aftersound.weave.schema.samples.Beer,JSON)"
          }
        }
      }
    }
  },
  {
    "path": "/echo",
    "paramFields": [
      {
        "paramType": "Path",
        "name": "p1",
        "type": "String",
        "multiValued": false,
        "constraint": {
          "type": "Required"
        }
      },
      {
        "paramType": "Query",
        "name": "q1",
        "type": "Boolean",
        "valueFuncSpec": "TO_BOOLEAN(String,Y,N)",
        "multiValued": false,
        "constraint": {
          "type": "Required"
        },
        "validation": {
          "type": "AllowedValues",
          "valueSet": [
            "Y",
            "N"
          ],
          "enforcement": "Strong"
        }
      },
      {
        "paramType": "Query",
        "name": "q2",
        "type": "Date",
        "valueFuncSpec": "TO_DATE(yyyyMMddHH)",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "paramType": "Query",
        "name": "q3",
        "type": "Double",
        "valueFuncSpec": "TO_DOUBLE(String)",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "paramType": "Query",
        "name": "q4",
        "type": "Float",
        "valueFuncSpec": "TO_FLOAT(String)",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "paramType": "Query",
        "name": "q5",
        "type": "Integer",
        "valueFuncSpec": "TO_INTEGER(String,DefaultForNull(10))",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "paramType": "Query",
        "name": "q6",
        "type": "Long",
        "valueFuncSpec": "TO_LONG(String)",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "paramType": "Query",
        "name": "q7",
        "type": "Short",
        "valueFuncSpec": "MAPPING(String,Short,one,1,two,2,three,3,four,4)",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "paramType": "Query",
        "name": "q8",
        "type": "String",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "paramType": "Query",
        "name": "q9",
        "type": "Range",
        "valueFuncSpec": "TO_RANGE(Long)",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "paramType": "Query",
        "name": "q10",
        "type": "Short",
        "valueFuncSpec": "MAPPING(String,Short,one,1,two,2,three,3,four,4)",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        },
        "validation": {
          "type": "AllowedValues",
          "valueSet": [
            "one",
            "two",
            "three",
            "four"
          ],
          "enforcement": "Strong"
        }
      },
      {
        "paramType": "Query",
        "name": "q11",
        "type": "Double",
        "valueFuncSpec": "TO_DOUBLE(String,DefaultForNull(99.99))",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "paramType": "Body",
        "name": "b1",
        "type": "com.fasterxml.jackson.databind.JsonNode",
        "valueFuncSpec": "DECODE(JacksonCodec(JsonNode,Json))",
        "multiValued": false,
        "constraint": {
          "type": "Optional"
        }
      },
      {
        "paramType": "Predefined",
        "name": "pd1",
        "type": "Long",
        "valueFuncSpec": "VAL(Long,1000)",
        "multiValued": false,
        "constraint": {
          "type": "Required"
        }
      }
    ],
    "executionControl": {
      "type": "EchoService"
    }
  }
]